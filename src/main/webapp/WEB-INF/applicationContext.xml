<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task" xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans         http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/mvc           http://www.springframework.org/schema/mvc/spring-mvc.xsd
                            http://www.springframework.org/schema/context       http://www.springframework.org/schema/context/spring-context-3.2.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <context:property-placeholder location="${properties.location}"/>

    <import resource="data-source.xml"/>
    <import resource="data-context.xml"/>
    <import resource="social-context.xml"/>
    <import resource="security-context.xml"/>

    <!-- Caching -->
    <cache:annotation-driven/>

    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
                    <property name="name" value="matchActionWrappers"/>
                </bean>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
                    <property name="name" value="accountStatistics"/>
                </bean>
            </set>
        </property>
    </bean>
    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <mvc:resources mapping="/resources/**" location="/resources/"/>

    <!-- Enables swgger ui-->
    <mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/"/>
    <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- Configure to plugin JSON as request and response in method handler -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jsonMessageConverter"/>
            </list>
        </property>
    </bean>

    <!-- Configure bean to convert JSON to POJO and vice versa -->
    <bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    </bean>

    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
          p:basename="classpath:messages">
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter" />
            <bean class="org.springframework.http.converter.ResourceHttpMessageConverter" />
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- Message internationalization -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="cookieName" value="clientlanguage"/>
        <property name="defaultLocale" value="nl"/>
        <property name="cookieMaxAge" value="100000"/>
    </bean>


    <!-- SET default mail properties -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${mail.smtp.host}"/>
        <property name="port" value="${mail.smtp.port}"/>
        <property name="username" value="${mail.smtp.userName}"/>
        <property name="password" value="${mail.smtp.password}"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.timeout">3000</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">false</prop>
            </props>
        </property>
    </bean>

    <!-- recatchpa -->
    <bean id="reCaptchaImpl" class="net.tanesha.recaptcha.ReCaptchaImpl">
        <property name="privateKey" value="${recatchpa.private}"/>
    </bean>

    <!-- Tasks -->
    <task:scheduled-tasks scheduler="scheduler">
        <task:scheduled ref="cleanupTask" method="execute" cron="${activationCodeCleanup.cronSchedule}"/>
        <task:scheduled ref="resetCachesTask" method="execute" fixed-delay="${cleanupCache.delay}"/>
        <task:scheduled ref="doodleReminderTask" method="execute" cron="${doodleReminderTask.cronSchedule}"/>
        <task:scheduled ref="pollsTask" method="execute" fixed-delay="${pollsTask.delay}"/>
    </task:scheduled-tasks>

    <bean id="cleanupTask" class="be.spring.app.tasks.CleanupTask"/>
    <bean id="resetCachesTask" class="be.spring.app.tasks.ResetCachesTask"/>
    <bean id="doodleReminderTask" class="be.spring.app.tasks.DoodleReminderTask"/>
    <bean id="pollsTask" class="be.spring.app.tasks.PollsTask"/>

    <task:scheduler id="scheduler" pool-size="4"/>
</beans>
